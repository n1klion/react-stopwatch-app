{"version":3,"sources":["static/img/play_arrow-24px.svg","redux/tracker-reducer.js","components/InputTrackName.jsx","static/img/play_circle_outline-24px.svg","static/img/pause_circle_outline-24px.svg","static/img/remove_circle_outline-24px.svg","utils/formatTime.js","components/TrackersList.jsx","App.js","reportWebVitals.js","redux/store.js","redux/localStorage.js","index.js"],"names":["ADD_TRACKER","DELETE_TRACKER","PAUSE_TRACKER","UNPAUSE_TRACKER","UPDATE_TIME","initialState","trackers","addTracker","title","type","InputTrackName","useState","value","setValue","tracks","useSelector","state","tracker","dispatch","useDispatch","setTitle","trim","count","length","className","placeholder","onChange","e","target","inputChange","onKeyPress","key","keyPressHandler","onClick","src","PlayIcon","alt","formatTime","seconds","hours","parseInt","minutes","TrackersList","id","startTime","pauseTime","secondsLeft","isActive","intervalRef","useRef","clearIntervalRef","current","clearInterval","undefined","start","setInterval","updateTime","useEffect","PauseCircleIcon","PlayCircleIcon","pauseTracker","unpauseTracker","Date","now","RemoveCircleIcon","deleteTracker","App","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","rootReducers","combineReducers","action","t","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f55a9be8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/play_arrow-24px.f303159b.svg\";","const ADD_TRACKER = 'tracker/ADD_TRACKER'\r\nconst DELETE_TRACKER = 'tracker/DELETE_TRACKER'\r\nconst PAUSE_TRACKER = 'tracker/PAUSE_TRACKER'\r\nconst UNPAUSE_TRACKER = 'tracker/UNPAUSE_TRACKER'\r\nconst UPDATE_TIME = 'tracker/UPDATE_TIME'\r\n\r\nconst initialState = {\r\n    trackers: [],\r\n}\r\n\r\nexport const TrackerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TRACKER:\r\n            return {\r\n                ...state,\r\n                trackers: [\r\n                    {\r\n                        id: Date.now(),\r\n                        title: action.title,\r\n                        startTime: Date.now(),\r\n                        pauseTime: 0,\r\n                        secondsLeft: 0,\r\n                        isActive: true,\r\n                    },\r\n                    ...state.trackers,\r\n                ],\r\n            }\r\n        case UPDATE_TIME: {\r\n            return {\r\n                ...state,\r\n                trackers: state.trackers.map((t) => {\r\n                    if (t.id === action.id) {\r\n                        t.secondsLeft = parseInt((Date.now() - t.startTime) / 1000)\r\n                    }\r\n                    return t\r\n                }),\r\n            }\r\n        }\r\n        case DELETE_TRACKER:\r\n            return {\r\n                ...state,\r\n                trackers: state.trackers.filter((t) => t.id !== action.id),\r\n            }\r\n        case PAUSE_TRACKER:\r\n            return {\r\n                ...state,\r\n                trackers: state.trackers.map((t) => {\r\n                    if (t.id === action.id) {\r\n                        t.pauseTime = Date.now()\r\n                        t.isActive = false\r\n                    }\r\n                    return t\r\n                }),\r\n            }\r\n        case UNPAUSE_TRACKER:\r\n            return {\r\n                ...state,\r\n                trackers: state.trackers.map((t) => {\r\n                    if (t.id === action.id) {\r\n                        t.startTime = action.startTime\r\n                        t.pauseTime = 0\r\n                        t.isActive = true\r\n                    }\r\n                    return t\r\n                }),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addTracker = (title) => ({ type: ADD_TRACKER, title })\r\n\r\nexport const updateTime = (id) => ({ type: UPDATE_TIME, id })\r\n\r\nexport const deleteTracker = (id) => ({ type: DELETE_TRACKER, id })\r\n\r\nexport const pauseTracker = (id) => ({ type: PAUSE_TRACKER, id })\r\n\r\nexport const unpauseTracker = (id, startTime) => ({ type: UNPAUSE_TRACKER, id, startTime })\r\n","import React, { useState } from 'react'\r\nimport PlayIcon from '../static/img/play_arrow-24px.svg'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addTracker } from '../redux/tracker-reducer'\r\n\r\nexport const InputTrackName = () => {\r\n    const [value, setValue] = useState('')\r\n    const tracks = useSelector((state) => state.tracker.trackers)\r\n    const dispatch = useDispatch()\r\n\r\n    const inputChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const setTitle = () => {\r\n        if (value.trim() === '') {\r\n            const count = tracks.length + 1\r\n            dispatch(addTracker(`No name tracker #${count}`))\r\n        } else {\r\n            dispatch(addTracker(value.trim()))\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    const keyPressHandler = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setTitle()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"input\">\r\n            <input type=\"text\" placeholder=\"Enter tracker name\" value={value} onChange={(e) => inputChange(e)} onKeyPress={(e) => keyPressHandler(e)} />\r\n            <button type={'submit'} onClick={() => setTitle()}>\r\n                <img src={PlayIcon} alt={'start'} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/play_circle_outline-24px.6fd9f684.svg\";","export default __webpack_public_path__ + \"static/media/pause_circle_outline-24px.7dc9fc12.svg\";","export default __webpack_public_path__ + \"static/media/remove_circle_outline-24px.594713c1.svg\";","export const formatTime = (seconds) => {\r\n    const hours = parseInt(seconds / 3600)\r\n    seconds = seconds % 3600\r\n    const minutes = parseInt(seconds / 60)\r\n    seconds = parseInt(seconds % 60)\r\n    return (hours < 10 ? '0' : '') + hours + ':' + (minutes < 10 ? '0' : '') + minutes + ':' + (seconds < 10 ? '0' : '') + seconds\r\n}\r\n","import PlayCircleIcon from '../static/img/play_circle_outline-24px.svg'\r\nimport PauseCircleIcon from '../static/img/pause_circle_outline-24px.svg'\r\nimport RemoveCircleIcon from '../static/img/remove_circle_outline-24px.svg'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteTracker, pauseTracker, unpauseTracker, updateTime } from '../redux/tracker-reducer'\r\nimport { formatTime } from '../utils/formatTime'\r\n\r\nexport const TrackersList = ({ id, title, startTime, pauseTime, secondsLeft, isActive }) => {\r\n    const dispatch = useDispatch()\r\n    const intervalRef = useRef()\r\n\r\n    const clearIntervalRef = () => {\r\n        if (intervalRef.current) {\r\n            clearInterval(intervalRef.current)\r\n            intervalRef.current = undefined\r\n        }\r\n    }\r\n\r\n    const start = () => {\r\n        if (!intervalRef.current) {\r\n            intervalRef.current = setInterval(() => {\r\n                dispatch(updateTime(id))\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    const remove = () => {\r\n        dispatch(deleteTracker(id))\r\n        clearIntervalRef()\r\n    }\r\n\r\n    const toggle = () => {\r\n        if (isActive) {\r\n            dispatch(pauseTracker(id))\r\n            clearIntervalRef()\r\n        } else {\r\n            dispatch(unpauseTracker(id, startTime + (Date.now() - pauseTime)))\r\n            start()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isActive) start()\r\n        return () => clearIntervalRef()\r\n    }, [])\r\n\r\n    return (\r\n        <div className={isActive ? 'timer timer-active' : 'timer'}>\r\n            <div className=\"timer__title\">\r\n                <span>{title}</span>\r\n            </div>\r\n            <div className=\"timer__dashboard\">\r\n                <span>{formatTime(secondsLeft)}</span>\r\n                <div className=\"timer__dashboard__buttons\">\r\n                    <img src={isActive ? PauseCircleIcon : PlayCircleIcon} onClick={toggle} alt=\"pause\" />\r\n                    <img className=\"buttons_remove\" src={RemoveCircleIcon} alt=\"remove tracker\" onClick={remove} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport { InputTrackName } from './components/InputTrackName'\nimport { TrackersList } from './components/TrackersList'\nimport { useSelector } from 'react-redux'\n\nfunction App() {\n    const trackers = useSelector((state) => state.tracker.trackers)\n\n    return (\n        <div className=\"App\">\n            <div className=\"header\">\n                <h1>tracker</h1>\n            </div>\n            <InputTrackName />\n            <div className=\"timers\">\n                {trackers.map((tracker) => (\n                    <TrackersList key={tracker.id} id={tracker.id} title={tracker.title} startTime={tracker.startTime} pauseTime={tracker.pauseTime} secondsLeft={tracker.secondsLeft} isActive={tracker.isActive} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TrackerReducer } from './tracker-reducer'\r\nimport { combineReducers, createStore } from 'redux'\r\nimport { loadState, saveState } from './localStorage'\r\n\r\nconst persistedState = loadState()\r\n\r\nconst rootReducers = combineReducers({\r\n    tracker: TrackerReducer,\r\n})\r\n\r\nconst store = createStore(rootReducers, persistedState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        tracker: store.getState().tracker,\r\n    })\r\n})\r\n\r\nexport default store\r\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state')\r\n        if (serializedState === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    } catch (err) {}\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}